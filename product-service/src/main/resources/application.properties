spring.application.name=product-service
server.port=9999

# Whether a "NoHandlerFoundException" thrown if no Handler was found to process a request.
#spring.mvc.throw-exception-if-no-handler-found=true

# DB Properties
#H2 Database URLs
#Embedded
#The URL jdbc:h2:~/test means the database is stored in the user home directory in files starting with 'test'. Absolute locations like jdbc:h2:/data/db/test are supported. In embedded mode, the database runs in the same process as the application. Only one process may access a database at any time. Databases are automatically created if they don't exist. Warning: if no path is used (for example jdbc:h2:test), then the database is stored in the current working directory (the directory where the application was started). URLs of the form jdbc:h2:data/test are relative to the current working directory. It is recommended to use locations relative to ~ or absolute locations.
#Remote (client/server)
#The URL jdbc:h2:tcp://localhost/~/test means connect over TCP/IP to the H2 TCP server running on this computer, and open a database called test in the user home directory. The server must be started first. Any number of clients can connect to the same database. The same location rules as for embedded databases apply.
#In-Memory
#The URL jdbc:h2:mem:test means open an in-memory database named 'test'. Data is not persisted, and lost when the last connection to the database is closed. Multiple threads can access the same database, but data is only visible within the same process.

#spring.datasource.url=jdbc:h2:file:~/testdb;DB_CLOSE_ON_EXIT=FALSE;IFEXISTS=TRUE;DB_CLOSE_DELAY=-1;
#spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.url=jdbc:h2:file:./testdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password

spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto = update

# Enabling H2 Console  #http://localhost:9999/h2-console
spring.h2.console.enabled=true

#
## Root logger option
#log4j.rootLogger=INFO, stdout
# 
## Direct log messages to stdout
#log4j.appender.stdout=org.apache.log4j.ConsoleAppender
#log4j.appender.stdout.Target=System.out
#log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
#log4j.appender.stdout.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %c{1} - %m%n

#logging.level.com.netflix.eureka=ON
#logging.level.com.netflix.discovery=ON